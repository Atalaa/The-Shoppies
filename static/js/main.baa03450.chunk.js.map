{"version":3,"sources":["components/SnackBar.js","components/Header.js","components/NewMovieCard.js","config/config.js","pages/NewMovies.js","components/Search.js","components/MovieCard.js","pages/Movies.js","pages/Nominees.js","pages/NotFound.js","components/SimpleBottomNavigation.js","components/App.js","index.js"],"names":["SnackBar","className","Header","nominees","onClick","window","scroll","length","NewMovieCard","word","poster","title","date","rating","substring","Badge","badgeContent","color","src","alt","NewMovies","useState","newMovies","setNewMovies","getTrendingMovieRequest","a","fetch","response","json","jsonResponse","results","useEffect","map","currentMovie","id","poster_path","release_date","vote_average","Search","searchMovie","setSearchMovie","inputEl","useRef","current","focus","ref","placeholder","value","onChange","event","preventDefault","updateMovie","target","MovieCard","posterSearch","year","disabledState","handleNomineeClick","isMoviesPage","Button","variant","disabled","Movies","movies","setMovies","getMovieRequest","url","mounted","imdbID","Poster","Title","Year","find","item","Nominees","clicked","NotFound","exact","to","useStyles","makeStyles","root","width","position","bottom","zIndex","backgroundColor","notifications","transform","SimpleBottomNavigation","nomineesCounter","classes","React","setValue","currentYear","Date","getFullYear","history","useHistory","replace","BottomNavigation","newValue","showLabels","BottomNavigationAction","style","label","icon","Whatshot","Theaters","EmojiEventsSharp","badge","App","setNominees","useLocation","pathname","includes","shoppiesNominees","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","Container","path","movie","newNomineeList","filter","currentNominee","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa03450.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/banner.css\";\n\n//Component that displays the banner when we select 5 movies.\nconst SnackBar = () => {\n  return (\n    <span className=\"banner animate__animated animate__fadeInRight\">\n      There are 5 movies nominated for the Shoppies Awards 2021\n    </span>\n  );\n};\n\nexport default SnackBar;\n","import React from \"react\";\nimport SnackBar from \"./SnackBar\";\nimport \"../styles/header.css\";\n\n//Header checks if I have 5 nominees, then display the banner\nconst Header = ({ nominees }) => {\n  return (\n    <div onClick={() => window.scroll(0, 0)}>\n      <h1 className=\"header\">\n        ðŸŽž The Shoppies ðŸŽ¬ {nominees.length === 5 && <SnackBar />}\n      </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { img_300 } from \"../config/config.js\";\nimport { Badge } from \"@material-ui/core\";\nimport \"../styles/movieCard.css\";\n\n//Component that displays the new movies coming in 2021\nconst NewMovieCard = ({ poster, title, date, rating }) => {\n  //Check if the title is too long, take a part of the string\n  let word;\n  if (title.length > 20) {\n    word = `${title.substring(0, 21)} ...`;\n  } else {\n    word = title;\n  }\n  return (\n    <div className=\"media\">\n      <Badge\n        badgeContent={rating}\n        color={rating >= 7 ? \"primary\" : \"secondary\"}\n      />\n\n      <img className=\"poster\" src={`${img_300}${poster}`} alt={title} />\n\n      <b className=\"title\">{word}</b>\n\n      <span className=\"subTitle\">{date}</span>\n    </div>\n  );\n};\n\nexport default NewMovieCard;\n","//images size for tmdb\n\nexport const img_300 = \"https://image.tmdb.org/t/p/w300\";\nexport const img_500 = \"https://image.tmdb.org/t/p/w500\";\n\n// contentModal and singleContent\nexport const unavailable =\n  \"https://www.movienewz.com/img/films/poster-holder.jpg\";\n","import React, { useState, useEffect } from \"react\";\nimport NewMovieCard from \"../components/NewMovieCard\";\nimport \"../styles/newMovies.css\";\n\n//Components fetch movies currently playing in theaters\nconst NewMovies = () => {\n  const [newMovies, setNewMovies] = useState([]);\n\n  const getTrendingMovieRequest = async () => {\n    const url =\n      \"https://api.themoviedb.org/3/trending/movie/week?api_key=d4ba5eb46aeffb06e1401f8e2b87dd48\";\n    const response = await fetch(url);\n    const jsonResponse = await response.json();\n\n    //If we have a response with data, set the movie list\n    if (jsonResponse.results) {\n      setNewMovies(jsonResponse.results);\n    }\n  };\n\n  useEffect(() => {\n    getTrendingMovieRequest();\n  }, []);\n\n  return (\n    <div>\n      <span className=\"pageTitle\">New Movies</span>\n      <div className=\"newMovies\">\n        {newMovies &&\n          newMovies.map((currentMovie) => (\n            <NewMovieCard\n              key={currentMovie.id}\n              id={currentMovie.id}\n              poster={currentMovie.poster_path}\n              title={currentMovie.title}\n              date={currentMovie.release_date}\n              rating={currentMovie.vote_average}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NewMovies;\n","import React, { useRef, useEffect } from \"react\";\nimport \"../styles/search.css\";\n\n//Component that searchs a movie\nconst Search = ({ searchMovie, setSearchMovie }) => {\n  const inputEl = useRef(null);\n\n  useEffect(() => {\n    inputEl.current.focus();\n  });\n\n  const handleChangeMovie = (event) => {\n    event.preventDefault();\n    const updateMovie = event.target.value;\n    setSearchMovie(updateMovie);\n  };\n\n  return (\n    <div>\n      <input\n        ref={inputEl}\n        className=\"form-control\"\n        placeholder=\"Search a movie...\"\n        value={searchMovie}\n        onChange={handleChangeMovie}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../styles/movieCard.css\";\n\n//Component that displays the movies that I search\nconst MovieCard = ({\n  posterSearch,\n  title,\n  year,\n  disabledState,\n  handleNomineeClick,\n  currentMovie,\n  isMoviesPage,\n}) => {\n  //Check if the title is too long, take a part of the string\n  let word;\n  if (title.length > 20) {\n    word = `${title.substring(0, 21)} ...`;\n  } else {\n    word = title;\n  }\n\n  return (\n    <div className=\"media\">\n      {isMoviesPage && (\n        <Button\n          className=\"buttonNominate\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disabledState}\n          onClick={() => handleNomineeClick(currentMovie)}\n        >\n          Nominate\n        </Button>\n      )}\n\n      {!isMoviesPage && (\n        <Button\n          className=\"buttonRemove\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleNomineeClick(currentMovie)}\n        >\n          Remove\n        </Button>\n      )}\n\n      <img className=\"posterSearch\" src={posterSearch} alt={title} />\n\n      <b className=\"title\">{word}</b>\n\n      <span className=\"subTitle\">{`Released  in ${year}`}</span>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"../components/Search\";\nimport MovieCard from \"../components/MovieCard\";\nimport \"../styles/movies.css\";\n\n//Components fetch a specific movie searched\nconst Movies = ({ isMoviesPage, nominees, handleNomineeClick }) => {\n  const [movies, setMovies] = useState([]);\n  const [searchMovie, setSearchMovie] = useState(\"\");\n\n  const getMovieRequest = async (searchMovie) => {\n    const url = `http://www.omdbapi.com/?s=${searchMovie}&type=movie&apikey=986ccdbc`;\n    const response = await fetch(url);\n    const jsonResponse = await response.json();\n\n    //If we have a response with data, set the movie list\n    if (jsonResponse.Search) {\n      setMovies(jsonResponse.Search);\n    }\n  };\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getMovieRequest(searchMovie);\n    }\n    //cleanup\n    return () => (mounted = false);\n  }, [searchMovie]);\n\n  return (\n    <div>\n      <span className=\"pageTitle\">Movies title</span>\n      <Search searchMovie={searchMovie} setSearchMovie={setSearchMovie} />\n\n      <div className=\"movies\">\n        {movies &&\n          movies.map((currentMovie) => (\n            <MovieCard\n              key={currentMovie.imdbID}\n              id={currentMovie.imdbID}\n              currentMovie={currentMovie}\n              handleNomineeClick={handleNomineeClick}\n              posterSearch={currentMovie.Poster}\n              title={currentMovie.Title}\n              year={currentMovie.Year}\n              //Check if a movie exists in nominee list - to disable the nominate button\n              disabledState={\n                !!nominees.find(\n                  (item) => item.imdbID === currentMovie.imdbID\n                ) || nominees.length >= 5\n              }\n              isMoviesPage={isMoviesPage}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import React from \"react\";\nimport MovieCard from \"../components/MovieCard\";\nimport \"../styles/nominees.css\";\n\n//Components that displays nominee list\nconst Nominees = ({ isMoviesPage, nominees, handleNomineeClick, clicked }) => {\n  return (\n    <div>\n      <span className=\"pageTitle\">Nominees Titles</span>\n\n      <div className=\"nominees\">\n        {nominees &&\n          nominees.map((currentMovie) => (\n            <MovieCard\n              key={currentMovie.imdbID}\n              id={currentMovie.imdbID}\n              currentMovie={currentMovie}\n              posterSearch={currentMovie.Poster}\n              title={currentMovie.Title}\n              year={currentMovie.Year}\n              isMoviesPage={isMoviesPage}\n              handleNomineeClick={handleNomineeClick}\n              clicked={clicked}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Nominees;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n//Component that displays an error that informs that the page does not exist - display a button back to Home\nconst NotFound = () => {\n  return (\n    <div className=\"pageTitle\">\n      <div>\n        <h3>Sorry this page does not exist.</h3>\n        <NavLink exact to=\"/\">\n          <span> Home</span>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../styles/app.css\";\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  Badge,\n} from \"@material-ui/core\";\nimport { Whatshot, Theaters, EmojiEventsSharp } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\n\n//Component imported from Material UI to have a bottom navigation - I customized a bit (routes, notifications, label and icons)\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n    zIndex: 100,\n    backgroundColor: \"#2980B9\",\n  },\n  notifications: {\n    transform: \"translate(-320%, -10%)\",\n  },\n});\n\nexport default function SimpleBottomNavigation({ nomineesCounter }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState();\n  const currentYear = new Date().getFullYear();\n\n  let history = useHistory();\n\n  useEffect(() => {\n    if (value === 0) {\n      history.replace(\"/\");\n    } else if (value === 1) {\n      history.replace(\"/movies\");\n    } else if (value === 2) {\n      history.replace(\"/nominees\");\n    }\n  }, [value, history]);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label={`Coming in ${currentYear}`}\n        icon={<Whatshot />}\n      />\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label=\"Movies\"\n        icon={<Theaters />}\n      />\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label=\"Nominees\"\n        icon={<EmojiEventsSharp />}\n      />\n\n      <Badge\n        classes={{ badge: classes.notifications }}\n        badgeContent={nomineesCounter}\n        color=\"secondary\"\n      />\n    </BottomNavigation>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./Header\";\nimport NewMovies from \"../pages/NewMovies\";\nimport Movies from \"../pages/Movies\";\nimport Nominees from \"../pages/Nominees\";\nimport NotFound from \"../pages/NotFound\";\nimport Container from \"@material-ui/core/Container\";\nimport SimpleBottomNavigation from \"../components/SimpleBottomNavigation\";\nimport \"../styles/app.css\";\nimport \"animate.css\";\n\nconst App = () => {\n  const [nominees, setNominees] = useState([]);\n  const location = useLocation();\n\n  //Check if I am in Movies router page\n  const isMoviesPage = location.pathname.includes(\"movies\");\n\n  useEffect(() => {\n    const shoppiesNominees = JSON.parse(\n      localStorage.getItem(\"shoppies-nominees\")\n    );\n    if (shoppiesNominees) {\n      setNominees(shoppiesNominees);\n    }\n  }, []);\n\n  //Save to local storage\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"shoppies-nominees\", JSON.stringify(items));\n  };\n\n  //Add a movie in the nominee list and store it in storage\n  const addNominatedMovie = (movie) => {\n    const newNomineeList = [...nominees, movie];\n    setNominees(newNomineeList);\n    saveToLocalStorage(newNomineeList);\n  };\n\n  //Remove a movie from the nominee liste and remove it from storage\n  const removeNominatedMovie = (movie) => {\n    const newNomineeList = nominees.filter((currentNominee) => {\n      return currentNominee.imdbID !== movie.imdbID;\n    });\n    setNominees(newNomineeList);\n    saveToLocalStorage(newNomineeList);\n  };\n\n  return (\n    <>\n      <Header nominees={nominees} />\n\n      <div className=\"app\">\n        <Container>\n          <Switch>\n            <Route exact path=\"/\">\n              <NewMovies />\n            </Route>\n\n            <Route exact path=\"/movies\">\n              <Movies\n                isMoviesPage={isMoviesPage}\n                nominees={nominees}\n                handleNomineeClick={addNominatedMovie}\n              />\n            </Route>\n\n            <Route exact path=\"/nominees\">\n              <Nominees\n                isMoviesPage={isMoviesPage}\n                nominees={nominees}\n                handleNomineeClick={removeNominatedMovie}\n              />\n            </Route>\n\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n      <SimpleBottomNavigation nomineesCounter={nominees.length} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}